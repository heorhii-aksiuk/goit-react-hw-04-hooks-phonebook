{"version":3,"sources":["components/Section/Section.module.css","components/Contacts/Contacts.js","components/Form/Form.js","components/Section/Section.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Contacts","this","props","contacts","onRemoveClick","map","id","name","number","className","s","item","paragraph","button","onClick","type","Component","Form","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","newContact","nanoid","onSubmitContact","reset","onSubmit","wrapper","label","htmlFor","input","onChange","pattern","title","autoComplete","required","Section","children","section","Filter","App","filter","getNewContact","find","contact","alert","removeContact","handleFilter","JSON","parse","localStorage","getItem","prevState","setItem","stringify","normalizeFilter","toLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0bf2f98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1Dnh-\",\"title\":\"Section_title__1hjhP\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nclass Contacts extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  render() {\n    const { contacts, onRemoveClick } = this.props;\n    return (\n      <ul>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <li className={s.item} key={id} name={name}>\n              <p className={s.paragraph}>\n                <span>{name}</span>\n                <span>{number}</span>\n              </p>\n              <button\n                className={s.button}\n                onClick={() => onRemoveClick(id)}\n                type=\"button\"\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  static propTypes = {\n    onSubmitContact: PropTypes.func.isRequired,\n  };\n\n  state = { name: '', number: '' };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const id = nanoid(10);\n    const newContact = { id, name, number };\n    this.props.onSubmitContact(newContact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className={s.wrapper}>\n          <label className={s.label} htmlFor=\"name\">\n            Name:\n          </label>\n          <input\n            className={s.input}\n            value={name}\n            onChange={this.handleChange}\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            autoComplete=\"off\"\n            required\n          />\n        </div>\n        <div className={s.wrapper}>\n          <label className={s.label} htmlFor=\"number\">\n            Phone:\n          </label>\n          <input\n            className={s.input}\n            value={number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            id=\"number\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nclass Section extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    contact: PropTypes.element,\n  };\n\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section className={s.section}>\n        <h2 className={s.title}>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nclass Filter extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"filter\">\n          Find contacts by name\n        </label>\n        <input\n          className={s.input}\n          id=\"filter\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Section from './components/Section/Section';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  getNewContact = newContact => {\n    const { contacts } = this.state;\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      this.setState({ contacts: [newContact, ...contacts] });\n    }\n  };\n\n  removeContact = id => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: [...contacts].filter(contact => contact.id !== id),\n    });\n  };\n\n  handleFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizeFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmitContact={this.getNewContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.handleFilter} />\n          <Contacts\n            contacts={filteredContacts}\n            onRemoveClick={this.removeContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__3NEUM\",\"label\":\"Form_label__1iJif\",\"input\":\"Form_input__3jmj8\",\"button\":\"Form_button__2co0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2Xuew\",\"paragraph\":\"Contacts_paragraph__RpJys\",\"button\":\"Contacts_button__3Qsq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__1pWX9\",\"label\":\"Filter_label__3CMij\",\"input\":\"Filter_input__3EJkb\"};"],"sourceRoot":""}